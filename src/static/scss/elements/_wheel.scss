.wheel-container {
    margin-bottom: 40px;
}

/* общие настройки страницы */
.wheel-block {
    /* подключаем сетку */
    display: grid;
    /* ставим всё по центру */
    place-items: center;
    /* если что-то не помещается на своё место — скрываем то, что не поместилось */
    overflow: hidden;
    padding: 0 15px 15px;

    @include mq(md) {
        padding: 15px;
    }

    /* общий блок для всех элементов */
    .deal-wheel {
        background-color: #ffbb04;
        box-shadow: 0 0 15px #ffbb04;
        border-radius: 50%;
        padding: 30px;
        margin-bottom: 30px;
        margin-top: 50px;
        transform: rotate(90deg);
        /* размеры колеса */
        --size: clamp(250px, 50vw, 430px);
        /* настройки яркости и заливки фона секторов */
        --lg-hs: 0 3%;
        --lg-stop: 50%;
        --lg: linear-gradient(hsl(var(--lg-hs) 0%) 0 var(--lg-stop),
                hsl(var(--lg-hs) 20%) var(--lg-stop) 100%);
        /* добавляем позиционирование относительно других элементов */
        position: relative;
        /* подключаем сетку */
        display: grid;
        // grid-gap: calc(var(--size) / 20);
        /* выравниваем содержимое блока по центру */
        align-items: center;
        justify-items: start;
        /* задаём имена областей внутри сетки */
        grid-template-areas:
            "spinner"
            "trigger";
        /* устанавливаем размер шрифта */
        font-size: calc(var(--size) / 21);

        .circle-bg {
            position: absolute;
            left: -27px;
            top: -27px;
            width: calc(100% + 52px);
            height: calc(100% + 52px);
            border-radius: 50%;
            border: 22px solid #000;
            display: flex;
            align-items: center;
            justify-content: center;

            span {
                width: 30%;
                height: 30%;
                background-color: #000;
                border-radius: 100%;
                border: clamp(5px, 1vw, 10px) solid $orange;
                display: flex;
                align-items: center;
                justify-content: center;
                transform: rotate(-90deg);
                text-transform: uppercase;
                font-style: normal;
                @include adaptiv-font(120, 35);
                color: $orange;
                font-family: $logoText;

                @include mq(fhd) {
                    font-size: 80px;
                }
            }
        }

        .fire-bg {
            position: absolute;
            transform: rotate(270deg);
            left: -26px;
            top: -26px;
            width: calc(100% + 52px);
            height: calc(100% + 52px);
            background-image: url('./../img/Fire.png');
            background-size: contain;
            background-repeat: no-repeat;
            background-position-y: 2px;
            animation: Flickering 1s infinite;

            @keyframes Flickering {
                0% {
                    background-image: url('./../img/Fire-2.png');
                }

                50% {
                    background-image: url('./../img/Fire-2.png');
                }

                51% {
                    background-image: url('./../img/Fire.png');
                }

                100% {
                    background-image: url('./../img/Fire.png');
                }
            }

            @media (min-width: 768px) {
                left: -35px;
                top: -32px;
                width: calc(100% + 67px);
                height: calc(100% + 62px);
            }
        }

    }

    /* всё, что относится ко внутренним элементам главного блока, будет находиться в области сетки с названием spinner */
    .deal-wheel>* {
        grid-area: spinner;
    }

    /* сам блок и кнопка будут находиться в области сетки с названием trigger и будут выровнены по центру */
    .deal-wheel .btn-spin {
        grid-area: trigger;
        justify-self: center;
    }

    /* сектор колеса */
    .spinner {
        /* добавляем относительное позиционирование */
        position: relative;
        /* подключаем сетку */
        display: grid;
        /* выравниваем всё по центру */
        align-items: center;
        /* добавляем элемент в сетку */
        grid-template-areas: "spinner";
        background-image: url('./../img/wheel-bg.png');
        background-repeat: no-repeat;
        background-size: cover;
        /* устанавливаем размеры */
        width: var(--size);
        height: var(--size);
        /* поворачиваем элемент  */
        transform: rotate(calc(var(--rotate, 30) * 1deg));
        /* рисуем круглую обводку, а всё, что не поместится, — будет скрыто за кругом */
        border-radius: 50%;
    }

    /* всё, что внутри этого блока, будет находиться в области сетки с названием spinner */
    .spinner * {
        grid-area: spinner;
    }

    /* текст на секторах */
    .prize {
        /* включаем «гибкую» вёрстку */
        display: flex;
        align-items: center;
        /* задаём отступы от краёв блока */
        padding: 0 calc(var(--size) / 6) 0 calc(var(--size) / 20);
        /* устанавливаем размеры */
        width: 50%;
        height: 50%;
        /* устанавливаем координаты, относительно которых будем вращать текст */
        transform-origin: center right;
        /* поворачиваем текст */
        transform: rotate(var(--rotate));
        /* запрещаем пользователю выделять мышкой текст на секторах */
        user-select: none;
    }

    .prize .text {
        transform: rotate(-90deg);
        text-transform: uppercase;
        display: flex;
        flex-direction: column;
        align-items: center;
        text-align: center;
        max-width: 90%;
    }

    .prize {
        &.losses {
            color: #000;
            @include adaptiv-font(20, 11);
        }

        &.winner {
            @include adaptiv-font(28, 15);
            color: #ffbb04;
        }

        .small-text {
            font-size: .9em;
        }

        @include mq(fhd) {
            &.winner {
                font-size: 28px;
            }

            &.losses {
                font-size: 20px;
            }
        }
    }

    /* язычок */
    .ticker {
        /* добавляем относительное позиционирование */
        position: relative;
        z-index: 1;
        /* устанавливаем размеры */
        width: 0;
        height: 100px;
        /* делаем так, чтобы язычок был выше колеса */
        margin-left: -40px;
        /* форма язычка */
        /* устанавливаем точку, относительно которой будет вращаться язычок при движении колеса */
        transform-origin: center center;

        /* фон язычка */
        &::before {
            content: '';
            display: flex;
            position: absolute;
            bottom: 0;
            left: -50px;
            background-image: url('./../img/ticker.png');
            background-repeat: no-repeat;
            background-position: top center;
            box-sizing: cover;
            background-size: contain;
            width: 150px;
            height: 100%;
            transform: rotate(270deg);
        }

        @media (min-width: 768px) {
            height: 200px;

            &::before {
                left: -10px;
            }
        }
    }

    /* кнопка запуска колеса */
    .btn-spin {
        border: none;
        /* берём размер шрифта такой же, как в колесе */
        font-size: inherit;
        /* добавляем отступы от текста внутри кнопки */
        padding: 0.9rem 2rem 1rem;
        /* скругляем углы */
        border-radius: 0.5rem;
        /* меняем внешний вид курсора над кнопкой на руку*/
        cursor: pointer;
    }

    /* если кнопка нажата и неактивна */
    .btn-spin:disabled {
        /* меняем внешний вид курсора */
        cursor: progress;
        /* делаем кнопку полупрозрачной */
        opacity: 0.25;
    }

    /* анимация вращения */
    .is-spinning .spinner {
        transition: transform 8s cubic-bezier(0.1, -0.01, 0, 1);
    }

    /* анимация движения язычка */
    .is-spinning .ticker {
        animation: tick 700ms cubic-bezier(0.34, 1.56, 0.64, 1);
    }


    /* эффект, когда колесо задевает язычок при вращении */
    @keyframes tick {
        40% {
            /* чуть поворачиваем язычок наверх в середине анимации */
            transform: rotate(-12deg);
        }
    }
}